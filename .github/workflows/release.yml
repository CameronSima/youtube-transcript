name: Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Check for version change
        id: version-check
        run: |
          CURRENT_VERSION=$(jq -r '.version' < package.json)
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check-tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${{ env.current_version }})
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag v${{ env.current_version }} already exists."
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "Tag v${{ env.current_version }} does not exist."
            echo "tag_exists=false" >> $GITHUB_ENV

      - name: Create GitHub release
        if: env.tag_exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.current_version }}
          release_name: Release v${{ env.current_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update GitHub release
        if: env.tag_exists == 'true'
        id: update_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.current_version }}
          name: Release v${{ env.current_version }}
          body: |
            Updated release for version v${{ env.current_version }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        if: env.tag_exists == 'false' || steps.create_release.outputs.id
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url || steps.update_release.outputs.upload_url }}
          asset_path: ./dist/youtube-transcript.js
          asset_name: youtube-transcript.js
          asset_content_type: application/javascript
